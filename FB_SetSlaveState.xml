<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2024-12-18T13:01:10.755429" />
  <contentHeader name="RCP" modificationDateTime="2024-12-18T13:01:10.759429">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous>
      <pou name="FB_SetSlaveState" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="sAMSNet" address="%I*">
              <type>
                <derived name="AMSNETID" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Linked to EtherCAT master</xhtml>
              </documentation>
            </variable>
            <variable name="nSlaveAddr" address="%I*">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">  Linked to PortID of slave device</xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="fbSetECSlaveState">
              <type>
                <derived name="Tc2_EtherCAT.FB_EcSetSlaveState" />
              </type>
            </variable>
            <variable name="fbGetECSlaveState">
              <type>
                <derived name="Tc2_EtherCAT.FB_EcGetSlaveState" />
              </type>
            </variable>
            <variable name="nState">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="sNetId">
              <type>
                <derived name="T_AmsNetId" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Must have a value</xhtml>
              </documentation>
            </variable>
            <variable name="_CurrentState">
              <type>
                <derived name="ST_EcSlaveState" />
              </type>
            </variable>
          </localVars>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
:Description: FUNCTION block to control EtherCAT slave device state machine

:Instructions for use: Requires Tc2_EtherCAT Library

Version history:

+-------------+------------+----------------+----------+------------------------------------------+
|Date         | Version    | created under  | Author   | Remark                                   |
+=============+============+================+==========+==========================================+
|2024-12-12   | 1.0.0.0    | 			    | G.P      | Draft					                  |
+-------------+------------+----------------+----------+------------------------------------------+
|			  | 		   | 			    | 		   | Release							      |
+-------------+------------+----------------+----------+------------------------------------------+

</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="GetState" ObjectId="ef692b14-199b-4434-befb-a4a3c2ca5e22">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="tTimeout">
                    <type>
                      <TIME />
                    </type>
                    <initialValue>
                      <simpleValue value="TIME#10s0ms" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Timeout time for ECSetSlaveState FB</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">GetState := FALSE;
CASE nState OF
0:
   sNetID := F_CreateAmsNetId( sAMSNet ); // Convert linked EtherCAT Master AMS address and convert to string format FB's can use.
   nState := 1;

1:
  
	// Get slave current state so we can check it changed to the requested state
	fbGetECSlaveState(
		sNetId:= sNetId , 
		nSlaveAddr:= nSlaveAddr, 
		bExecute:= TRUE, 
		tTimeout:= tTimeout);
		nState := 2; // Goto next state
  
2:  
	fbGetECSlaveState(bExecute := FALSE, state=&gt; _CurrentState ); // Reset the execute flag of get slave state
	// Check get slave state has completed without errors
	IF (NOT fbGetECSlaveState.bBusy) AND (NOT fbGetECSlaveState.bError) THEN
		nState := 3; // Move on
	END_IF
3:
   // All complete so reset flags
   GetState := TRUE;
   nState := 0;

100:
   ;                     // Error handling..
END_CASE</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD GetState : BOOL
VAR_INPUT
	tTimeout   						: TIME := T#10S; // Timeout time for ECSetSlaveState FB
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="SetState" ObjectId="b8996a41-8ba6-4c9a-a1cc-b41eb4c74abc">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="reqState">
                    <type>
                      <WORD />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Holds the state the device will be set to 1 = Init, 2 = PreOP, 3 =  Bootstrap, 4 = SafeOp, 8 = OP</xhtml>
                    </documentation>
                  </variable>
                  <variable name="tTimeout">
                    <type>
                      <TIME />
                    </type>
                    <initialValue>
                      <simpleValue value="TIME#10s0ms" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Timeout time for ECSetSlaveState FB</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">SetState := FALSE;
CASE nState OF
0:
   sNetID := F_CreateAmsNetId( sAMSNet ); // Convert linked EtherCAT Master AMS address and convert to string format FB's can use.
   nState := 1;

1:
   // Set the slave to the state requested to goto	
   fbSetECSlaveState(
	sNetId:= sNetId, 
	nSlaveAddr:= nSlaveAddr, // Linked port  
	bExecute:= TRUE , 
	tTimeout:= tTimeout , 
	reqState:= reqState); // State requested to goto
    nState := nState + 1; // Goto next state
2:
  
  fbSetECSlaveState( bExecute := FALSE); // Reset the execute flag of set slave state
  // Check the set slave state has completed without errors
  IF (NOT fbSetECSlaveState.bBusy) AND (NOT fbSetECSlaveState.bError) THEN
	 // Get slave current state so we can check it changed to the requested state
	 fbGetECSlaveState(
		sNetId:= sNetId , 
		nSlaveAddr:= nSlaveAddr, 
		bExecute:= TRUE, 
		tTimeout:= tTimeout);
		nState := 3; // Goto next state
  END_IF
  
  IF fbSetECSlaveState.bError THEN
	  nState := 100;
  END_IF
  
3:  
	fbGetECSlaveState(bExecute := FALSE, state=&gt; _CurrentState ); // Reset the execute flag of get slave state
	// Check get slave state has completed without errors
	IF (NOT fbGetECSlaveState.bBusy) AND (NOT fbGetECSlaveState.bError) THEN
		nState := 4; // Move on
	END_IF
4:
	// Compare requested state with actual state
	CASE (reqState) OF
		  1:
		  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_INIT THEN
		  	    nState := 5; // Move to completed state
			END_IF;
		  2:
		  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_PREOP THEN
		  	    nState := 5; // Move to completed state
			END_IF;
          4:
		  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_SAFEOP THEN
		  	    nState := 5; // Move to completed state
			END_IF;
		  8:
		  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_OP THEN
		  	    nState := 5; // Move to completed state
			END_IF;
	  END_CASE
5:
   // All complete so reset flags
   SetState := TRUE;
   nState := 0;

100:
   ;                     // Error handling..
END_CASE</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD SetState : BOOL
VAR_INPUT
	reqState   						: WORD; // Holds the state the device will be set to 1 = Init, 2 = PreOP, 3 =  Bootstrap, 4 = SafeOp, 8 = OP
    tTimeout   						: TIME := T#10S; // Timeout time for ECSetSlaveState FB
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ResetStateToOp" ObjectId="aa8ffefb-02f0-4038-b2a9-ab898028e35b">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="tTimeout">
                    <type>
                      <TIME />
                    </type>
                    <initialValue>
                      <simpleValue value="TIME#10s0ms" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Timeout time for ECSetSlaveState FB</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">ResetStateToOp := FALSE;
CASE nState OF
0:
   sNetID := F_CreateAmsNetId( sAMSNet ); // Convert linked EtherCAT Master AMS address and convert to string format FB's can use.
   nState := 1;

1:
   // Set the slave to the state requested to goto	
   fbSetECSlaveState(
	sNetId:= sNetId, 
	nSlaveAddr:= nSlaveAddr, // Linked port  
	bExecute:= TRUE , 
	tTimeout:= tTimeout , 
	reqState:= 1); // State requested to init
    nState := nState + 1; // Goto next state
2:
  
  fbSetECSlaveState( bExecute := FALSE); // Reset the execute flag of set slave state
  // Check the set slave state has completed without errors
  IF (NOT fbSetECSlaveState.bBusy) AND (NOT fbSetECSlaveState.bError) THEN
	 // Get slave current state so we can check it changed to the requested state
	 fbGetECSlaveState(
		sNetId:= sNetId , 
		nSlaveAddr:= nSlaveAddr, 
		bExecute:= TRUE, 
		tTimeout:= tTimeout);
		nState := 3; // Goto next state
  END_IF
  
  IF fbSetECSlaveState.bError THEN
	  nState := 100;
  END_IF
  
3:  
	fbGetECSlaveState(bExecute := FALSE, state=&gt; _CurrentState ); // Reset the execute flag of get slave state
	// Check get slave state has completed without errors
	IF (NOT fbGetECSlaveState.bBusy) AND (NOT fbGetECSlaveState.bError) THEN
		nState := 4; // Move on
	END_IF
	
4:
	// Make sure in correct state
  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_INIT THEN
  	    nState := 5; // Move to completed state
	END_IF;
	
5:
	// Set the slave to the state requested to goto	
   fbSetECSlaveState(
	sNetId:= sNetId, 
	nSlaveAddr:= nSlaveAddr, // Linked port  
	bExecute:= TRUE , 
	tTimeout:= tTimeout , 
	reqState:= 8); // State requested to OP
    nState := nState + 1; // Goto next state
	
6:
	fbSetECSlaveState( bExecute := FALSE); // Reset the execute flag of set slave state
  	// Check the set slave state has completed without errors
  	IF (NOT fbSetECSlaveState.bBusy) AND (NOT fbSetECSlaveState.bError) THEN
		// Get slave current state so we can check it changed to the requested state
	 	fbGetECSlaveState(
			sNetId:= sNetId , 
			nSlaveAddr:= nSlaveAddr, 
			bExecute:= TRUE, 
			tTimeout:= tTimeout);
			nState := 7; // Goto next state
  	END_IF
  
	IF fbSetECSlaveState.bError THEN
		nState := 100;
  	END_IF
	
7:  
  	fbGetECSlaveState(bExecute := FALSE, state=&gt; _CurrentState ); // Reset the execute flag of get slave state
	// Check get slave state has completed without errors
	IF (NOT fbGetECSlaveState.bBusy) AND (NOT fbGetECSlaveState.bError) THEN
		nState := 8; // Move on
	END_IF
	
8:
	// Compare requested state with actual state
  	IF _CurrentState.deviceState = Tc2_EtherCAT.EC_DEVICE_STATE_OP THEN
  	    nState := 9; // Move to completed state
	END_IF;
	
9:
   // All complete so reset flags
   ResetStateToOp := TRUE;
   nState := 0;

100:
   ;                     // Error handling..
END_CASE</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD ResetStateToOp : BOOL
VAR_INPUT
    tTimeout   						: TIME := T#10S; // Timeout time for ECSetSlaveState FB
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="CurrentState" ObjectId="e910f97b-d02d-499b-a64c-15775b80d0b6">
              <interface>
                <returnType>
                  <derived name="ST_EcSlaveState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">CurrentState := _CurrentState;</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">VAR
END_VAR
</xhtml>
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY CurrentState : ST_EcSlaveState</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
:Description: FUNCTION block to control EtherCAT slave device state machine

:Instructions for use: Requires Tc2_EtherCAT Library

Version history:

+-------------+------------+----------------+----------+------------------------------------------+
|Date         | Version    | created under  | Author   | Remark                                   |
+=============+============+================+==========+==========================================+
|2024-12-12   | 1.0.0.0    | 			    | G.P      | Draft					                  |
+-------------+------------+----------------+----------+------------------------------------------+
|			  | 		   | 			    | 		   | Release							      |
+-------------+------------+----------------+----------+------------------------------------------+

*)
FUNCTION_BLOCK FB_SetSlaveState
VAR_INPUT
	sAMSNet		  AT %I*			: AMSNETID; // Linked to EtherCAT master
    nSlaveAddr    AT %I*     		: UINT;	    //  Linked to PortID of slave device
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbSetECSlaveState				: Tc2_EtherCAT.FB_EcSetSlaveState;
	fbGetECSlaveState				: Tc2_EtherCAT.FB_EcGetSlaveState;
	nState							: UINT;
    sNetId       					: T_AmsNetId; // Must have a value
	_CurrentState					: ST_EcSlaveState;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aef72ee8-9f50-4680-a371-6ad716b75c87</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="FB_SetSlaveState" ObjectId="aef72ee8-9f50-4680-a371-6ad716b75c87">
          <Object Name="CurrentState" ObjectId="e910f97b-d02d-499b-a64c-15775b80d0b6" />
          <Object Name="GetState" ObjectId="ef692b14-199b-4434-befb-a4a3c2ca5e22" />
          <Object Name="SetState" ObjectId="b8996a41-8ba6-4c9a-a1cc-b41eb4c74abc" />
          <Object Name="ResetStateToOp" ObjectId="aa8ffefb-02f0-4038-b2a9-ab898028e35b" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>